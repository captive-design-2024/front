{"ast":null,"code":"var _jsxFileName = \"/Users/wonseok/Desktop/react/hello/src/routes/BoardUpdate.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardUpdate = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    idx\n  } = useParams();\n  const [board, setBoard] = useState({\n    idx: 0,\n    title: '',\n    createdBy: '',\n    contents: ''\n  });\n  const {\n    title,\n    createdBy,\n    contents\n  } = board;\n  const onChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setBoard({\n      ...board,\n      [name]: value\n    });\n  };\n  const getBoard = () => {\n    // Simulate fetching data from an API\n    // You can replace this with your actual data fetching logic\n    // For now, I'll just set the board data directly\n    const mockBoardData = {\n      idx: 1,\n      title: 'Sample Title',\n      createdBy: 'Sample User',\n      contents: 'Sample Contents'\n    };\n    setBoard(mockBoardData);\n  };\n  const updateBoard = () => {\n    // Simulate updating data on the server\n    // You can replace this with your actual update logic\n    alert('수정되었습니다.');\n    navigate('/board/' + idx);\n  };\n  const backToDetail = () => {\n    navigate('/board/' + idx);\n  };\n  useEffect(() => {\n    getBoard();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uC791\\uC131\\uC790\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"createdBy\",\n        value: createdBy,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"contents\",\n        cols: \"30\",\n        rows: \"10\",\n        value: contents,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateBoard,\n        children: \"\\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backToDetail,\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardUpdate, \"JWak+i/Kk/6CSTF0Pcs6OXJRNgU=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = BoardUpdate;\nexport default BoardUpdate;\nvar _c;\n$RefreshReg$(_c, \"BoardUpdate\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","jsxDEV","_jsxDEV","BoardUpdate","_s","navigate","idx","board","setBoard","title","createdBy","contents","onChange","event","value","name","target","getBoard","mockBoardData","updateBoard","alert","backToDetail","children","fileName","_jsxFileName","lineNumber","columnNumber","type","readOnly","cols","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/wonseok/Desktop/react/hello/src/routes/BoardUpdate.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nconst BoardUpdate = () => {\n  const navigate = useNavigate();\n  const { idx } = useParams();\n  const [board, setBoard] = useState({\n    idx: 0,\n    title: '',\n    createdBy: '',\n    contents: '',\n  });\n\n  const { title, createdBy, contents } = board;\n\n  const onChange = (event) => {\n    const { value, name } = event.target;\n    setBoard({\n      ...board,\n      [name]: value,\n    });\n  };\n\n  const getBoard = () => {\n    // Simulate fetching data from an API\n    // You can replace this with your actual data fetching logic\n    // For now, I'll just set the board data directly\n    const mockBoardData = {\n      idx: 1,\n      title: 'Sample Title',\n      createdBy: 'Sample User',\n      contents: 'Sample Contents',\n    };\n    setBoard(mockBoardData);\n  };\n\n  const updateBoard = () => {\n    // Simulate updating data on the server\n    // You can replace this with your actual update logic\n    alert('수정되었습니다.');\n    navigate('/board/' + idx);\n  };\n\n  const backToDetail = () => {\n    navigate('/board/' + idx);\n  };\n\n  useEffect(() => {\n    getBoard();\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <span>제목</span>\n        <input type=\"text\" name=\"title\" value={title} onChange={onChange} />\n      </div>\n      <br />\n      <div>\n        <span>작성자</span>\n        <input type=\"text\" name=\"createdBy\" value={createdBy} readOnly={true} />\n      </div>\n      <br />\n      <div>\n        <span>내용</span>\n        <textarea\n          name=\"contents\"\n          cols=\"30\"\n          rows=\"10\"\n          value={contents}\n          onChange={onChange}\n        ></textarea>\n      </div>\n      <br />\n      <div>\n        <button onClick={updateBoard}>수정</button>\n        <button onClick={backToDetail}>취소</button>\n      </div>\n    </div>\n  );\n};\n\nexport default BoardUpdate;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO;EAAI,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC3B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC;IACjCQ,GAAG,EAAE,CAAC;IACNG,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM;IAAEF,KAAK;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAGJ,KAAK;EAE5C,MAAMK,QAAQ,GAAIC,KAAK,IAAK;IAC1B,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCR,QAAQ,CAAC;MACP,GAAGD,KAAK;MACR,CAACQ,IAAI,GAAGD;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IACrB;IACA;IACA;IACA,MAAMC,aAAa,GAAG;MACpBZ,GAAG,EAAE,CAAC;MACNG,KAAK,EAAE,cAAc;MACrBC,SAAS,EAAE,aAAa;MACxBC,QAAQ,EAAE;IACZ,CAAC;IACDH,QAAQ,CAACU,aAAa,CAAC;EACzB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;IACAC,KAAK,CAAC,UAAU,CAAC;IACjBf,QAAQ,CAAC,SAAS,GAAGC,GAAG,CAAC;EAC3B,CAAC;EAED,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACzBhB,QAAQ,CAAC,SAAS,GAAGC,GAAG,CAAC;EAC3B,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdoB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAM;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACfxB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACZ,IAAI,EAAC,OAAO;QAACD,KAAK,EAAEL,KAAM;QAACG,QAAQ,EAAEA;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACNxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNxB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAM;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChBxB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACZ,IAAI,EAAC,WAAW;QAACD,KAAK,EAAEJ,SAAU;QAACkB,QAAQ,EAAE;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eACNxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNxB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAM;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACfxB,OAAA;QACEa,IAAI,EAAC,UAAU;QACfc,IAAI,EAAC,IAAI;QACTC,IAAI,EAAC,IAAI;QACThB,KAAK,EAAEH,QAAS;QAChBC,QAAQ,EAAEA;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACNxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNxB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAQ6B,OAAO,EAAEZ,WAAY;QAAAG,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzCxB,OAAA;QAAQ6B,OAAO,EAAEV,YAAa;QAAAC,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CA7EID,WAAW;EAAA,QACEJ,WAAW,EACZC,SAAS;AAAA;AAAAgC,EAAA,GAFrB7B,WAAW;AA+EjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}